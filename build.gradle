plugins {
	id 'org.springframework.boot' version '2.6.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.com'
sourceCompatibility = '11'

jacoco {
	toolVersion = "0.8.7"
}

repositories {
	mavenCentral()
}

//gradle test jacocoTestReport
jacocoTestReport {
	dependsOn test

	group = "Reporting"
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('/reports/coverage')
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					excludes: [
							"**/com/avaliacaoTecnica/Application*",
							"**/com/avaliacaoTecnica/constants/*",
							"**/com/avaliacaoTecnica/dto/*",
							"**/com/avaliacaoTecnica/entities/*",
					])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			failOnViolation = true
			element = 'BUNDLE'
			limit {
				counter = 'CLASS'
				value = 'COVEREDRATIO'
				minimum = 0.9
			}
			excludes = [
					'com.avaliacaoTecnica.Application',
					'com.avaliacaoTecnica.constants*',
					'com.avaliacaoTecnica.dto*',
					'com.avaliacaoTecnica.entities*',
			]
		}
	}
}

test {
	def numTests = 0

	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor as String)
		numTests++
	}

	doLast {
		println "\nnumTests executed: ${numTests}"
	}

	finalizedBy jacocoTestReport
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.1'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
	implementation('org.flywaydb:flyway-core')
	implementation 'mysql:mysql-connector-java:8.0.29'
	implementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.2'

}

tasks.named('test') {
	useJUnitPlatform()
}